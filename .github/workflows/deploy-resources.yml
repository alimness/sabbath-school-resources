name: deploy
on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string

env:
  DEPLOY_ENV: ${{ inputs.branch }}

jobs:
  deploy-resources:
    if: (github.repository == 'Adventech/sabbath-school-resources')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
        name: Fetch the repository files
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39
      - name: Get changed files and write the outputs to a JSON file
        id: changed-files-write-output-files-json
        uses: tj-actions/changed-files@v39
        with:
          json: true
          write_output_files: true
      - uses: actions/setup-node@v3
        name: Setup Node
        with:
          node-version: '16'
      - name: Add token for private packages to access EGW & Bible tools
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.PACKAGES_SECRET }}" >> .npmrc
      - run: npm install --global yarn
        name: Install Yarn
      - run: yarn install
        name: Installing dependencies
      - run: gpg --quiet --batch --yes --decrypt --passphrase="$CREDS_PASSPHRASE" --output deploy-creds.tar deploy-creds.tar.gpg
        env:
          CREDS_PASSPHRASE: ${{ secrets.CREDS_PASSPHRASE }}
        working-directory: ops/deploy/creds
      - run: tar xvf deploy-creds.tar
        working-directory: ops/deploy/creds
      - run: |
          aws s3 ls s3://sabbath-school-resources-assets.adventech.io/assets --recursive --region us-east-1 | while read -r line; do
            filepath=$(echo "$line" | awk '{print $4}')
            if [[ ! -z "$filepath" && ! "$filepath" =~ /$ ]]; then
              mkdir -p "$(dirname "$filepath")" && touch "$filepath"
            fi
          done
        name: Syncing global assets, without creating actual file content, but making files empty
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: node ops/deploy/deploy-documents.js
        name: Deploy documents
      - run: node ops/deploy/deploy-sections.js
        name: Deploy sections
      - run: node ops/deploy/deploy-resources.js
        name: Deploy resources
      - run: node ops/deploy/deploy-languages.js
        name: Deploy languages
      - run: node ops/deploy/deploy-authors.js
        name: Deploy authors
      - run: node ops/deploy/deploy-categories.js
        name: Deploy categories
      - run: aws s3 cp dist/ s3://sabbath-school`[[ "${{ inputs.branch }}" = "stage" ]] && echo '-stage'`.adventech.io --acl "public-read" --region us-east-1 --no-progress --recursive
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}